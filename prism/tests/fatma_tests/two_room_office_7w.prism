mdp
 
module M 
 
waypoint:[0..6] init 4;
door_edge0:[-1..1] init -1;
door_edge1:[-1..1] init -1;

[move_base_WayPoint0_WayPoint3] (waypoint=0) -> 1.0:(waypoint'=3);
[move_base_WayPoint0_WayPoint4] (waypoint=0) -> 1.0:(waypoint'=4);
[move_base_WayPoint1_WayPoint2] (waypoint=1) -> 1.0:(waypoint'=2);
[doorPassing_WayPoint2_WayPoint3] (waypoint=2) & (door_edge0=1) -> 1.0:(waypoint'=3);
[move_base_WayPoint3_WayPoint4] (waypoint=3) -> 1.0:(waypoint'=4);
[doorPassing_WayPoint4_WayPoint5] (waypoint=4) & (door_edge1=1) -> 1.0:(waypoint'=5);
[move_base_WayPoint5_WayPoint6] (waypoint=5) -> 1.0:(waypoint'=6);


[move_base_WayPoint3_WayPoint0] (waypoint=3) -> 1.0:(waypoint'=0);
[move_base_WayPoint4_WayPoint0] (waypoint=4) -> 1.0:(waypoint'=0);
[move_base_WayPoint2_WayPoint1] (waypoint=2) -> 1.0:(waypoint'=1);
[doorPassing_WayPoint3_WayPoint2] (waypoint=3) & (door_edge0=1) -> 1.0:(waypoint'=2);
[move_base_WayPoint4_WayPoint3] (waypoint=4) -> 1.0:(waypoint'=3);
[doorPassing_WayPoint5_WayPoint4] (waypoint=5) & (door_edge1=1) -> 1.0:(waypoint'=4);
[move_base_WayPoint6_WayPoint5] (waypoint=6) -> 1.0:(waypoint'=5);

[check_door0] (waypoint=2) & (door_edge0=-1) -> 0.1:(waypoint'=2) & (door_edge0'=0) + 0.9:(waypoint'=2) & (door_edge0'=1);
[check_door0] (waypoint=3) & (door_edge0=-1) -> 0.1:(waypoint'=3) & (door_edge0'=0) + 0.9:(waypoint'=3) & (door_edge0'=1);

[check_door1] (waypoint=5) & (door_edge1=-1) -> 0.1:(waypoint'=5) & (door_edge1'=0) + 0.9:(waypoint'=5) & (door_edge1'=1);
[check_door1] (waypoint=4) & (door_edge1=-1) -> 0.1:(waypoint'=4) & (door_edge1'=0) + 0.9:(waypoint'=4) & (door_edge1'=1);

endmodule

label "WayPoint5" = (waypoint=5);
label "WayPoint6" = (waypoint=6);
label "WayPoint3" = (waypoint=3);
label "WayPoint4" = (waypoint=4);
label "WayPoint1" = (waypoint=1);
label "WayPoint2" = (waypoint=2);
label "WayPoint0" = (waypoint=0);

rewards "time"

	[move_base_WayPoint0_WayPoint3] (waypoint=0):1.0;
	[move_base_WayPoint0_WayPoint4] (waypoint=0):1.0;
	[move_base_WayPoint1_WayPoint2] (waypoint=1):1.0;
	[doorPassing_WayPoint2_WayPoint3] (waypoint=2) & (door_edge0=1):1.0;
	[move_base_WayPoint3_WayPoint4] (waypoint=3):1.0;
	[doorPassing_WayPoint4_WayPoint5] (waypoint=4) & (door_edge1=1):1.0;
	[move_base_WayPoint5_WayPoint6] (waypoint=5):1.0;

	[move_base_WayPoint3_WayPoint0] (waypoint=3):1.0;
	[move_base_WayPoint4_WayPoint0] (waypoint=4):1.0;
	[move_base_WayPoint2_WayPoint1] (waypoint=2):1.0;
	[doorPassing_WayPoint3_WayPoint2] (waypoint=3) & (door_edge0=1):1.0;
	[move_base_WayPoint4_WayPoint3] (waypoint=4):1.0;
	[doorPassing_WayPoint5_WayPoint4] (waypoint=5) & (door_edge1=1):1.0;
	[move_base_WayPoint6_WayPoint5] (waypoint=6):1.0;

	[check_door0] (waypoint=2) & (door_edge0=-1):1.0;
	[check_door0] (waypoint=3) & (door_edge0=-1):1.0;
	[check_door1] (waypoint=5) & (door_edge1=-1):1.0;
	[check_door1] (waypoint=4) & (door_edge1=-1):1.0;

endrewards
